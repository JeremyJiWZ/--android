package wj.airwar;import android.content.pm.ActivityInfo;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.util.DisplayMetrics;import android.util.Log;import android.view.MotionEvent;import android.view.View;import android.widget.ImageView;import android.widget.RelativeLayout;public class Double_Activity extends AppCompatActivity {    private int length,screenWidth,screenHeight;    private ImageView box1,box2;    private int player_turn = 1;//player 1 play first    private ImageView shadow_hor,shadow_ver;    RelativeLayout.LayoutParams hor_lay;    RelativeLayout.LayoutParams ver_lay;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_double_);        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);        //test        DisplayMetrics dm = getResources().getDisplayMetrics();        screenWidth = dm.widthPixels;        screenHeight = dm.heightPixels - 50;        length = screenHeight / 14;        box1 = (ImageView)findViewById(R.id.box1);        box2 = (ImageView)findViewById(R.id.box2);        shadow_hor = (ImageView)findViewById(R.id.shadow_horizontal);        shadow_ver = (ImageView)findViewById(R.id.shadow_vertical);        box_init();        image_init();        box1.setOnTouchListener(new Player_BoomListener());        box2.setOnTouchListener(new Player_BoomListener());        hor_lay = new RelativeLayout.LayoutParams(length*10,length);        ver_lay = new RelativeLayout.LayoutParams(length, length * 10);        shadow_ver.setLayoutParams(hor_lay);        shadow_hor.setLayoutParams(ver_lay);    }    private void box_init(){        RelativeLayout.LayoutParams bp1 = new RelativeLayout.LayoutParams(length*11,length*11);        bp1.leftMargin = 0;        bp1.topMargin = length;        box1.setLayoutParams(bp1);        RelativeLayout.LayoutParams bp2 = new RelativeLayout.LayoutParams(length*11,length*11);        bp2.leftMargin = length*12;        bp2.topMargin = length;        box2.setLayoutParams(bp2);    }    private void image_init(){        RelativeLayout.LayoutParams pl1 = new RelativeLayout.LayoutParams(length*7,length);        pl1.leftMargin = (int) (2.5*length);        pl1.topMargin  = 0;        ImageView p1 = (ImageView)findViewById(R.id.player1);        p1.setLayoutParams(pl1);        RelativeLayout.LayoutParams pl2 = new RelativeLayout.LayoutParams(length*7,length);        pl2.leftMargin = (int) (14.5*length);        pl2.topMargin  = 0;        ImageView p2 = (ImageView)findViewById(R.id.player2);        p2.setLayoutParams(pl2);        RelativeLayout.LayoutParams idl = new RelativeLayout.LayoutParams(length,length);        idl.leftMargin = 12*length;        idl.topMargin  = 5*length;        ImageView id = (ImageView)findViewById(R.id.indicator);        id.setLayoutParams(idl);    }    private void fill_shadow(int player,int row,int col){        if (player==1) {            hor_lay.leftMargin = 13*length;            hor_lay.topMargin = (row+1)*length;            ver_lay.topMargin = length;            ver_lay.leftMargin = (col+13)*length;        }        else {            hor_lay.leftMargin = length;            hor_lay.topMargin = (row+1)*length;            ver_lay.leftMargin = (col+1)*length;            ver_lay.topMargin = length;        }        shadow_hor.setImageResource(R.drawable.fill_horizontal);        shadow_ver.setImageResource(R.drawable.fill_vertical);    }    class Player_BoomListener implements ImageView.OnTouchListener {        @Override        public boolean onTouch(View v, MotionEvent event) {            int action = event.getAction();            int lastX=0,lastY=0;            int row=0, col=0;            switch (action) {                case MotionEvent.ACTION_DOWN:                    lastX = (int) event.getRawX();                    lastY = (int) event.getRawY();                    if (player_turn == 1) {                        row = lastY / length - 2;                        col = lastX / length - 13;                    }                    else {                        row = lastY / length - 2;                        col = lastX / length - 1;                    }                    //out of bound                    if (row<0||col<0||row>10||col>10)                        break;                    fill_shadow(player_turn,row,col);                    Log.e("row",""+row);                    Log.e("col",""+col);                    break;                case MotionEvent.ACTION_MOVE:                    lastX = (int) event.getRawX();                    lastY = (int) event.getRawY();                    if (player_turn == 1) {                        row = lastY / length - 2;                        col = lastX / length - 13;                    }                    else {                        row = lastY / length - 2;                        col = lastX / length - 1;                    }                    //out of bound                    if (row<0||col<0||row>10||col>10)                        break;                    fill_shadow(player_turn,row,col);                    Log.e("row", ""+row);                    Log.e("col", "" + col);                    break;                case MotionEvent.ACTION_UP:                    shadow_hor.setImageResource(0);                    shadow_ver.setImageResource(0);                    if (player_turn==1)                        player_turn = 2;                    else                        player_turn = 1;                    break;            }            return false;        }    }}